# EXERCISE 8

# select the work directory
# instal the packages ggplot2 and select it 

library("ggplot2")
setwd('/Users/claudiaveraarias/Documents/ND_Classes/Fall_Semester_2019/Biocomputing/R/W11_BC/Tutorial/')

#1) Using the score-by-score information from this game summarized in 
#“UWvMSU_1-22-13.txt” generate a graph

	# read the file
UWvsMSU <- read.delim("/Users/claudiaveraarias/Documents/ND_Classes/Fall_Semester_2019/Biocomputing/R/W11_BC/Tutorial/IBC_Exercise_08-master/UWvMSU_1-22-13.txt", header = TRUE, sep = "\t", dec = ".")

	#Function to plot scores
 
PlotScore <- function(UWvsMSU) {
  UW <- UWvsMSU[UWvsMSU$team == "UW", ]
  UWscore <- UW[,3] 
  UWcumScore <- cumsum(UW[,3])
  UWtime <- UW[,1]
  MSU <- UWvsMSU[UWvsMSU$team == "MSU", ]
  MSUscore <- MSU[,3]
  MSUcumScore <- cumsum(MSU[,3])
  MSUtime <- MSU[,1]
      # make that both objects  have the same size
  length(UWtime)=length(MSUtime)
  length(UWcumScore)=length(MSUcumScore)
  
  
  ggplot() + geom_line(aes(x=UWtime, y=UWcumScore), color="green") +
    geom_line(aes(x=MSUtime, y=MSUcumScore), color="blue") +
    labs( y = "Score", x = "Time", tittle = "UW vs MSU")
  }


#2) Write a game called “guess my number”. The computer will generate a 
# random number between 1 and 100. The user types in a number and the computer 
# replies “lower” if the random number is lower than the guess, “higher” if the 
# random number is higher, and “correct!” if the guess is correct. The player can 
# continue guessing up to 10 times.

##  Guess my numbers

x <- sample(1:100, 1, replace = F) #random numbers between 1 and 100
x

Guess_my_number <- function(x){
  #x <- sample(1:100, 1, replace = F) #random numbers between 1 and 100
  for (i in 1:100)
  if(i > x){
    print("lower");
  } else if (i < x) {
    print("higher");
  } else {
    print("Correct");
    break;
  }
}
 #--------------------------
#other

# Classic guessing game with twist
x = 0
gotRight = 0
failed = 0

#Initial lambda for our random var
correct = sample(1:100, 1, replace = F) # 100  I have to check this
initial = correct

# how many guesses should we allow per number
maxGuesses = 10

while(x != Inf) {
  correct = rpois(1,correct) +1
  
  cat("I am thinking of a number between 1 and 100. What is it? (type Inf to quit)n")
  
  # solicit input from the user
  x = scan(n=1) # just one item is this vector
  
  if(x == Inf) {
    cat("The correct answer was", correct, "n")
    cat("You got", gotRight, "right and failed", failed, "times. Maximum allowed guesses was", maxGuesses, "and initial lambda was", initial, ". Goodbye.n")
    break
  }
  for (i in 1:maxGuesses) {
    if(x == correct) {
      print("Correct")
      gotRight = gotRight + 1
      break
    } else {
      if(i == maxGuesses) {
        cat("You ran out of guesses. I will pick a new random number based on the last one.n")
        failed = failed + 1
      } else {
        if(x < correct) {
          cat("Higher.n")
        } else {
          cat("Lower.n")
        }
      x = scan(n=1)
        }
    }
  }
}


